# serializer version: 1
# name: test_aggregate_function_call_ok[agg_fcall_distinct][sql]
  'SELECT FUNC(DISTINCT col1)'
# ---
# name: test_aggregate_function_call_ok[agg_fcall_distinct][tree]
  '''
  query_expr
    select
      select_list
        select_expr
          function_call_expr
            function_name
              ident	FUNC
              function_distinct
            function_args
              pos_arg
                ident	col1
  
  '''
# ---
# name: test_aggregate_function_call_ok[agg_fcall_having_max][sql]
  'SELECT FUNC(col1 HAVING MAX col2)'
# ---
# name: test_aggregate_function_call_ok[agg_fcall_having_max][tree]
  '''
  query_expr
    select
      select_list
        select_expr
          function_call_expr
            function_name
              ident	FUNC
            function_args
              pos_arg
                ident	col1
            having_modifier
              having_max
              ident	col2
  
  '''
# ---
# name: test_aggregate_function_call_ok[agg_fcall_having_min][sql]
  'SELECT FUNC(col1 HAVING MIN col2)'
# ---
# name: test_aggregate_function_call_ok[agg_fcall_having_min][tree]
  '''
  query_expr
    select
      select_list
        select_expr
          function_call_expr
            function_name
              ident	FUNC
            function_args
              pos_arg
                ident	col1
            having_modifier
              having_min
              ident	col2
  
  '''
# ---
# name: test_aggregate_function_call_ok[agg_fcall_ignore_nulls][sql]
  'SELECT FUNC(col1 IGNORE NULLS)'
# ---
# name: test_aggregate_function_call_ok[agg_fcall_ignore_nulls][tree]
  '''
  query_expr
    select
      select_list
        select_expr
          function_call_expr
            function_name
              ident	FUNC
            function_args
              pos_arg
                ident	col1
            nulls_modifier
              ignore_nulls
  
  '''
# ---
# name: test_aggregate_function_call_ok[agg_fcall_limit][sql]
  'SELECT FUNC(col1 LIMIT 1)'
# ---
# name: test_aggregate_function_call_ok[agg_fcall_limit][tree]
  '''
  query_expr
    select
      select_list
        select_expr
          function_call_expr
            function_name
              ident	FUNC
            function_args
              pos_arg
                ident	col1
            limit_modifier
              integer_literal	1
  
  '''
# ---
# name: test_aggregate_function_call_ok[agg_fcall_order_by][sql]
  'SELECT FUNC(col1 ORDER BY col2 DESC)'
# ---
# name: test_aggregate_function_call_ok[agg_fcall_order_by][tree]
  '''
  query_expr
    select
      select_list
        select_expr
          function_call_expr
            function_name
              ident	FUNC
            function_args
              pos_arg
                ident	col1
            order_by_modifier
              order_by_items
                order_by_item
                  ident	col2
                  order_by_item_sort	DESC
  
  '''
# ---
# name: test_aggregate_function_call_ok[agg_fcall_respect_nulls][sql]
  'SELECT FUNC(col1 RESPECT NULLS)'
# ---
# name: test_aggregate_function_call_ok[agg_fcall_respect_nulls][tree]
  '''
  query_expr
    select
      select_list
        select_expr
          function_call_expr
            function_name
              ident	FUNC
            function_args
              pos_arg
                ident	col1
            nulls_modifier
              respect_nulls
  
  '''
# ---
# name: test_and_or_not_ok[expr_and_or_not][sql]
  'SELECT x OR y AND NOT z'
# ---
# name: test_and_or_not_ok[expr_and_or_not][tree]
  '''
  query_expr
    select
      select_list
        select_expr
          or_expr
            ident	x
            and_expr
              ident	y
              not_expr
                ident	z
  
  '''
# ---
# name: test_and_or_not_ok[expr_and_or_not_parens][sql]
  'SELECT (x OR y) AND NOT z'
# ---
# name: test_and_or_not_ok[expr_and_or_not_parens][tree]
  '''
  query_expr
    select
      select_list
        select_expr
          and_expr
            parenthesized_expr
              or_expr
                ident	x
                ident	y
            not_expr
              ident	z
  
  '''
# ---
# name: test_between_ok[expr_between][sql]
  'SELECT x BETWEEN a AND b AND c'
# ---
# name: test_between_ok[expr_between][tree]
  '''
  query_expr
    select
      select_list
        select_expr
          and_expr
            between_expr
              ident	x
              ident	a
              ident	b
            ident	c
  
  '''
# ---
# name: test_case_ok[case_match_multi][sql]
  'SELECT CASE col1 WHEN 1 THEN 1 WHEN 2 THEN 2 END'
# ---
# name: test_case_ok[case_match_multi][tree]
  '''
  query_expr
    select
      select_list
        select_expr
          case_match_expr
            ident	col1
            when_then_expr
              integer_literal	1
              integer_literal	1
            when_then_expr
              integer_literal	2
              integer_literal	2
  
  '''
# ---
# name: test_case_ok[case_match_multi_else][sql]
  'SELECT CASE col1 WHEN 1 THEN 1 WHEN 2 THEN 2 ELSE 3 END'
# ---
# name: test_case_ok[case_match_multi_else][tree]
  '''
  query_expr
    select
      select_list
        select_expr
          case_match_expr
            ident	col1
            when_then_expr
              integer_literal	1
              integer_literal	1
            when_then_expr
              integer_literal	2
              integer_literal	2
            else_expr
              integer_literal	3
  
  '''
# ---
# name: test_case_ok[case_match_single][sql]
  'SELECT CASE col1 WHEN 1 THEN 1 END'
# ---
# name: test_case_ok[case_match_single][tree]
  '''
  query_expr
    select
      select_list
        select_expr
          case_match_expr
            ident	col1
            when_then_expr
              integer_literal	1
              integer_literal	1
  
  '''
# ---
# name: test_case_ok[case_multi][sql]
  'SELECT CASE WHEN 1 THEN 1 WHEN 2 THEN 2 END'
# ---
# name: test_case_ok[case_multi][tree]
  '''
  query_expr
    select
      select_list
        select_expr
          case_expr
            when_then_expr
              integer_literal	1
              integer_literal	1
            when_then_expr
              integer_literal	2
              integer_literal	2
  
  '''
# ---
# name: test_case_ok[case_multi_else][sql]
  'SELECT CASE WHEN 1 THEN 1 WHEN 2 THEN 2 ELSE 3 END'
# ---
# name: test_case_ok[case_multi_else][tree]
  '''
  query_expr
    select
      select_list
        select_expr
          case_expr
            when_then_expr
              integer_literal	1
              integer_literal	1
            when_then_expr
              integer_literal	2
              integer_literal	2
            else_expr
              integer_literal	3
  
  '''
# ---
# name: test_case_ok[case_single][sql]
  'SELECT CASE WHEN 1 THEN 1 END'
# ---
# name: test_case_ok[case_single][tree]
  '''
  query_expr
    select
      select_list
        select_expr
          case_expr
            when_then_expr
              integer_literal	1
              integer_literal	1
  
  '''
# ---
# name: test_cast_ok[cast][sql]
  "SELECT CAST('1' AS INT64)"
# ---
# name: test_cast_ok[cast][tree]
  '''
  query_expr
    select
      select_list
        select_expr
          cast_expr_kind_cast
            cast_expr_target
              string_literal	'1'
              ident	INT64
  
  '''
# ---
# name: test_cast_ok[cast_format][sql]
  "SELECT CAST(b'\\x48\\x65\\x6c\\x6c\\x6f' AS STRING FORMAT 'ASCII')"
# ---
# name: test_cast_ok[cast_format][tree]
  '''
  query_expr
    select
      select_list
        select_expr
          cast_expr_kind_cast
            cast_expr_target
              bytes_literal	b'\x48\x65\x6c\x6c\x6f'
              ident	STRING
            cast_expr_format
              string_literal	'ASCII'
  
  '''
# ---
# name: test_cast_ok[cast_safe][sql]
  "SELECT SAFE_CAST('1' AS INT64)"
# ---
# name: test_cast_ok[cast_safe][tree]
  '''
  query_expr
    select
      select_list
        select_expr
          cast_expr_kind_safe_cast
            cast_expr_target
              string_literal	'1'
              ident	INT64
  
  '''
# ---
# name: test_column_expr_ok[expr_add][sql]
  'SELECT x + y'
# ---
# name: test_column_expr_ok[expr_add][tree]
  '''
  query_expr
    select
      select_list
        select_expr
          add_expr
            ident	x
            ident	y
  
  '''
# ---
# name: test_column_expr_ok[expr_and][sql]
  'SELECT x AND y'
# ---
# name: test_column_expr_ok[expr_and][tree]
  '''
  query_expr
    select
      select_list
        select_expr
          and_expr
            ident	x
            ident	y
  
  '''
# ---
# name: test_column_expr_ok[expr_between][sql]
  'SELECT x BETWEEN y AND z'
# ---
# name: test_column_expr_ok[expr_between][tree]
  '''
  query_expr
    select
      select_list
        select_expr
          between_expr
            ident	x
            ident	y
            ident	z
  
  '''
# ---
# name: test_column_expr_ok[expr_bitwise_and][sql]
  'SELECT x & y'
# ---
# name: test_column_expr_ok[expr_bitwise_and][tree]
  '''
  query_expr
    select
      select_list
        select_expr
          bitwise_and_expr
            ident	x
            ident	y
  
  '''
# ---
# name: test_column_expr_ok[expr_bitwise_not][sql]
  'SELECT ~x'
# ---
# name: test_column_expr_ok[expr_bitwise_not][tree]
  '''
  query_expr
    select
      select_list
        select_expr
          bitwise_not_expr
            ident	x
  
  '''
# ---
# name: test_column_expr_ok[expr_bitwise_or][sql]
  'SELECT x | y'
# ---
# name: test_column_expr_ok[expr_bitwise_or][tree]
  '''
  query_expr
    select
      select_list
        select_expr
          bitwise_or_expr
            ident	x
            ident	y
  
  '''
# ---
# name: test_column_expr_ok[expr_bitwise_shr][sql]
  'SELECT x >> y'
# ---
# name: test_column_expr_ok[expr_bitwise_shr][tree]
  '''
  query_expr
    select
      select_list
        select_expr
          bitwise_shr_expr
            ident	x
            ident	y
  
  '''
# ---
# name: test_column_expr_ok[expr_bitwise_xor][sql]
  'SELECT x ^ y'
# ---
# name: test_column_expr_ok[expr_bitwise_xor][tree]
  '''
  query_expr
    select
      select_list
        select_expr
          bitwise_xor_expr
            ident	x
            ident	y
  
  '''
# ---
# name: test_column_expr_ok[expr_div][sql]
  'SELECT x / y'
# ---
# name: test_column_expr_ok[expr_div][tree]
  '''
  query_expr
    select
      select_list
        select_expr
          div_expr
            ident	x
            ident	y
  
  '''
# ---
# name: test_column_expr_ok[expr_eq][sql]
  'SELECT x = y'
# ---
# name: test_column_expr_ok[expr_eq][tree]
  '''
  query_expr
    select
      select_list
        select_expr
          eq_expr
            ident	x
            ident	y
  
  '''
# ---
# name: test_column_expr_ok[expr_field_access][sql]
  'SELECT x.y'
# ---
# name: test_column_expr_ok[expr_field_access][tree]
  '''
  query_expr
    select
      select_list
        select_expr
          path_expression
            ident	x
            ident	y
  
  '''
# ---
# name: test_column_expr_ok[expr_gt][sql]
  'SELECT x > y'
# ---
# name: test_column_expr_ok[expr_gt][tree]
  '''
  query_expr
    select
      select_list
        select_expr
          gt_expr
            ident	x
            ident	y
  
  '''
# ---
# name: test_column_expr_ok[expr_gte][sql]
  'SELECT x >= y'
# ---
# name: test_column_expr_ok[expr_gte][tree]
  '''
  query_expr
    select
      select_list
        select_expr
          gte_expr
            ident	x
            ident	y
  
  '''
# ---
# name: test_column_expr_ok[expr_in][sql]
  'SELECT x IN (1,2,3)'
# ---
# name: test_column_expr_ok[expr_in][tree]
  '''
  query_expr
    select
      select_list
        select_expr
          in_expr
            ident	x
            parenthesized_list
              integer_literal	1
              integer_literal	2
              integer_literal	3
  
  '''
# ---
# name: test_column_expr_ok[expr_is][sql]
  'SELECT x IS TRUE'
# ---
# name: test_column_expr_ok[expr_is][tree]
  '''
  query_expr
    select
      select_list
        select_expr
          is_expr
            ident	x
            boolean_literal	TRUE
  
  '''
# ---
# name: test_column_expr_ok[expr_is_distinct_from][sql]
  'SELECT x IS DISTINCT FROM y'
# ---
# name: test_column_expr_ok[expr_is_distinct_from][tree]
  '''
  query_expr
    select
      select_list
        select_expr
          is_distinct_from_expr
            ident	x
            ident	y
  
  '''
# ---
# name: test_column_expr_ok[expr_is_not][sql]
  'SELECT x IS NOT NULL'
# ---
# name: test_column_expr_ok[expr_is_not][tree]
  '''
  query_expr
    select
      select_list
        select_expr
          is_not_expr
            ident	x
            null_literal	NULL
  
  '''
# ---
# name: test_column_expr_ok[expr_like][sql]
  "SELECT x LIKE 'a%'"
# ---
# name: test_column_expr_ok[expr_like][tree]
  '''
  query_expr
    select
      select_list
        select_expr
          like_expr
            ident	x
            string_literal	'a%'
  
  '''
# ---
# name: test_column_expr_ok[expr_lt][sql]
  'SELECT x < y'
# ---
# name: test_column_expr_ok[expr_lt][tree]
  '''
  query_expr
    select
      select_list
        select_expr
          lt_expr
            ident	x
            ident	y
  
  '''
# ---
# name: test_column_expr_ok[expr_lte][sql]
  'SELECT x <= y'
# ---
# name: test_column_expr_ok[expr_lte][tree]
  '''
  query_expr
    select
      select_list
        select_expr
          lte_expr
            ident	x
            ident	y
  
  '''
# ---
# name: test_column_expr_ok[expr_mul][sql]
  'SELECT x * y'
# ---
# name: test_column_expr_ok[expr_mul][tree]
  '''
  query_expr
    select
      select_list
        select_expr
          mul_expr
            ident	x
            ident	y
  
  '''
# ---
# name: test_column_expr_ok[expr_ne][sql]
  'SELECT x != y'
# ---
# name: test_column_expr_ok[expr_ne][tree]
  '''
  query_expr
    select
      select_list
        select_expr
          ne_expr
            ident	x
            ident	y
  
  '''
# ---
# name: test_column_expr_ok[expr_ne_var][sql]
  'SELECT x <> y'
# ---
# name: test_column_expr_ok[expr_ne_var][tree]
  '''
  query_expr
    select
      select_list
        select_expr
          ne_expr
            ident	x
            ident	y
  
  '''
# ---
# name: test_column_expr_ok[expr_not][sql]
  'SELECT NOT x'
# ---
# name: test_column_expr_ok[expr_not][tree]
  '''
  query_expr
    select
      select_list
        select_expr
          not_expr
            ident	x
  
  '''
# ---
# name: test_column_expr_ok[expr_not_between][sql]
  'SELECT x NOT BETWEEN y AND z'
# ---
# name: test_column_expr_ok[expr_not_between][tree]
  '''
  query_expr
    select
      select_list
        select_expr
          not_between_expr
            ident	x
            ident	y
            ident	z
  
  '''
# ---
# name: test_column_expr_ok[expr_not_in][sql]
  'SELECT x NOT IN UNNEST([1,2,3])'
# ---
# name: test_column_expr_ok[expr_not_in][tree]
  '''
  query_expr
    select
      select_list
        select_expr
          not_in_expr
            ident	x
            unnest_expr
              array_literal
                array_literal_item_list
                  integer_literal	1
                  integer_literal	2
                  integer_literal	3
  
  '''
# ---
# name: test_column_expr_ok[expr_not_like][sql]
  "SELECT x NOT LIKE 'a%'"
# ---
# name: test_column_expr_ok[expr_not_like][tree]
  '''
  query_expr
    select
      select_list
        select_expr
          not_like_expr
            ident	x
            string_literal	'a%'
  
  '''
# ---
# name: test_column_expr_ok[expr_not_qlike][sql]
  "SELECT x NOT LIKE ALL ('a%','%b')"
# ---
# name: test_column_expr_ok[expr_not_qlike][tree]
  '''
  query_expr
    select
      select_list
        select_expr
          not_qlike_expr
            ident	x
            qlike_quantifier	ALL
            parenthesized_list
              string_literal	'a%'
              string_literal	'%b'
  
  '''
# ---
# name: test_column_expr_ok[expr_or][sql]
  'SELECT x OR y'
# ---
# name: test_column_expr_ok[expr_or][tree]
  '''
  query_expr
    select
      select_list
        select_expr
          or_expr
            ident	x
            ident	y
  
  '''
# ---
# name: test_column_expr_ok[expr_parens][sql]
  'SELECT (x OR y) OR z'
# ---
# name: test_column_expr_ok[expr_parens][tree]
  '''
  query_expr
    select
      select_list
        select_expr
          or_expr
            parenthesized_expr
              or_expr
                ident	x
                ident	y
            ident	z
  
  '''
# ---
# name: test_column_expr_ok[expr_qlike][sql]
  "SELECT x LIKE ANY UNNEST(['a%','%b'])"
# ---
# name: test_column_expr_ok[expr_qlike][tree]
  '''
  query_expr
    select
      select_list
        select_expr
          qlike_expr
            ident	x
            qlike_quantifier	ANY
            unnest_expr
              array_literal
                array_literal_item_list
                  string_literal	'a%'
                  string_literal	'%b'
  
  '''
# ---
# name: test_column_expr_ok[expr_sub][sql]
  'SELECT x - y'
# ---
# name: test_column_expr_ok[expr_sub][tree]
  '''
  query_expr
    select
      select_list
        select_expr
          sub_expr
            ident	x
            ident	y
  
  '''
# ---
# name: test_column_expr_ok[expr_subscript][sql]
  'SELECT x[0]'
# ---
# name: test_column_expr_ok[expr_subscript][tree]
  '''
  query_expr
    select
      select_list
        select_expr
          subscript_expr
            ident	x
            integer_literal	0
  
  '''
# ---
# name: test_column_expr_ok[expr_uminus][sql]
  'SELECT -x'
# ---
# name: test_column_expr_ok[expr_uminus][tree]
  '''
  query_expr
    select
      select_list
        select_expr
          uminus_expr
            ident	x
  
  '''
# ---
# name: test_column_expr_ok[expr_uplus][sql]
  'SELECT +x'
# ---
# name: test_column_expr_ok[expr_uplus][tree]
  '''
  query_expr
    select
      select_list
        select_expr
          uplus_expr
            ident	x
  
  '''
# ---
# name: test_dotted_expr_ok[dotted_column_expr_multi][sql]
  'SELECT column1.column2.column3'
# ---
# name: test_dotted_expr_ok[dotted_column_expr_multi][tree]
  '''
  query_expr
    select
      select_list
        select_expr
          path_expression
            ident	column1
            ident	column2
            ident	column3
  
  '''
# ---
# name: test_dotted_expr_ok[dotted_column_expr_single][sql]
  'SELECT column1.column2'
# ---
# name: test_dotted_expr_ok[dotted_column_expr_single][tree]
  '''
  query_expr
    select
      select_list
        select_expr
          path_expression
            ident	column1
            ident	column2
  
  '''
# ---
# name: test_dotted_expr_ok[dotted_table_expr_multi][sql]
  'SELECT column1 FROM `project1`.dataset1.table1'
# ---
# name: test_dotted_expr_ok[dotted_table_expr_multi][tree]
  '''
  query_expr
    select
      select_list
        select_expr
          ident	column1
      from_clause
        from_item_table
          path_expression
            ident	`project1`
            ident	dataset1
            ident	table1
  
  '''
# ---
# name: test_dotted_expr_ok[dotted_table_expr_single][sql]
  'SELECT column1 FROM dataset1.table1'
# ---
# name: test_dotted_expr_ok[dotted_table_expr_single][tree]
  '''
  query_expr
    select
      select_list
        select_expr
          ident	column1
      from_clause
        from_item_table
          path_expression
            ident	dataset1
            ident	table1
  
  '''
# ---
# name: test_function_call_ok[fcall_kitchen_sink][sql]
  'SELECT FUNC(1, name2 => 2)'
# ---
# name: test_function_call_ok[fcall_kitchen_sink][tree]
  '''
  query_expr
    select
      select_list
        select_expr
          function_call_expr
            function_name
              ident	FUNC
            function_args
              pos_arg
                integer_literal	1
              named_arg
                ident	name2
                integer_literal	2
  
  '''
# ---
# name: test_function_call_ok[fcall_named_arg_multi][sql]
  'SELECT FUNC(name1 => 1, name2 => 2)'
# ---
# name: test_function_call_ok[fcall_named_arg_multi][tree]
  '''
  query_expr
    select
      select_list
        select_expr
          function_call_expr
            function_name
              ident	FUNC
            function_args
              named_arg
                ident	name1
                integer_literal	1
              named_arg
                ident	name2
                integer_literal	2
  
  '''
# ---
# name: test_function_call_ok[fcall_named_arg_single][sql]
  'SELECT FUNC(name1 => 1)'
# ---
# name: test_function_call_ok[fcall_named_arg_single][tree]
  '''
  query_expr
    select
      select_list
        select_expr
          function_call_expr
            function_name
              ident	FUNC
            function_args
              named_arg
                ident	name1
                integer_literal	1
  
  '''
# ---
# name: test_function_call_ok[fcall_path_expr][sql]
  'SELECT NET.IPV4_FROM_INT64(42)'
# ---
# name: test_function_call_ok[fcall_path_expr][tree]
  '''
  query_expr
    select
      select_list
        select_expr
          function_call_expr
            function_name
              path_expression
                ident	NET
                ident	IPV4_FROM_INT64
            function_args
              pos_arg
                integer_literal	42
  
  '''
# ---
# name: test_function_call_ok[fcall_pos_arg_multi][sql]
  'SELECT FUNC(1, 2)'
# ---
# name: test_function_call_ok[fcall_pos_arg_multi][tree]
  '''
  query_expr
    select
      select_list
        select_expr
          function_call_expr
            function_name
              ident	FUNC
            function_args
              pos_arg
                integer_literal	1
              pos_arg
                integer_literal	2
  
  '''
# ---
# name: test_function_call_ok[fcall_pos_arg_none][sql]
  'SELECT FUNC()'
# ---
# name: test_function_call_ok[fcall_pos_arg_none][tree]
  '''
  query_expr
    select
      select_list
        select_expr
          function_call_expr
            function_name
              ident	FUNC
  
  '''
# ---
# name: test_function_call_ok[fcall_pos_arg_single][sql]
  'SELECT FUNC(1)'
# ---
# name: test_function_call_ok[fcall_pos_arg_single][tree]
  '''
  query_expr
    select
      select_list
        select_expr
          function_call_expr
            function_name
              ident	FUNC
            function_args
              pos_arg
                integer_literal	1
  
  '''
# ---
# name: test_function_call_ok[fcall_star_expr][sql]
  'SELECT FUNC(*)'
# ---
# name: test_function_call_ok[fcall_star_expr][tree]
  '''
  query_expr
    select
      select_list
        select_expr
          function_call_expr
            function_name
              ident	FUNC
            function_args
              star_arg
  
  '''
# ---
# name: test_keyword_subquery_ok[keyword_subquery_array][sql]
  'SELECT ARRAY(SELECT 1)'
# ---
# name: test_keyword_subquery_ok[keyword_subquery_array][tree]
  '''
  query_expr
    select
      select_list
        select_expr
          array_subquery_expr
            query_expr
              select
                select_list
                  select_expr
                    integer_literal	1
  
  '''
# ---
# name: test_keyword_subquery_ok[keyword_subquery_exists][sql]
  'SELECT EXISTS(SELECT 1)'
# ---
# name: test_keyword_subquery_ok[keyword_subquery_exists][tree]
  '''
  query_expr
    select
      select_list
        select_expr
          exists_subquery_expr
            query_expr
              select
                select_list
                  select_expr
                    integer_literal	1
  
  '''
# ---
# name: test_subscript_expr_ok[subscript_expr_integer_literal_multi][sql]
  'SELECT column1[0][1]'
# ---
# name: test_subscript_expr_ok[subscript_expr_integer_literal_multi][tree]
  '''
  query_expr
    select
      select_list
        select_expr
          subscript_expr
            subscript_expr
              ident	column1
              integer_literal	0
            integer_literal	1
  
  '''
# ---
# name: test_subscript_expr_ok[subscript_expr_integer_literal_single][sql]
  'SELECT column1[0]'
# ---
# name: test_subscript_expr_ok[subscript_expr_integer_literal_single][tree]
  '''
  query_expr
    select
      select_list
        select_expr
          subscript_expr
            ident	column1
            integer_literal	0
  
  '''
# ---
# name: test_subscript_expr_ok[subscript_expr_kitchen_sink][sql]
  "SELECT column1[0].column2[OFFSET(0)].column3['key1']"
# ---
# name: test_subscript_expr_ok[subscript_expr_kitchen_sink][tree]
  '''
  query_expr
    select
      select_list
        select_expr
          subscript_expr
            dot_ident
              subscript_expr
                dot_ident
                  subscript_expr
                    ident	column1
                    integer_literal	0
                  ident	column2
                function_call_expr
                  function_name
                    ident	OFFSET
                  function_args
                    pos_arg
                      integer_literal	0
              ident	column3
            string_literal	'key1'
  
  '''
# ---
# name: test_subscript_expr_ok[subscript_expr_offset][sql]
  'SELECT column1[OFFSET(2)]'
# ---
# name: test_subscript_expr_ok[subscript_expr_offset][tree]
  '''
  query_expr
    select
      select_list
        select_expr
          subscript_expr
            ident	column1
            function_call_expr
              function_name
                ident	OFFSET
              function_args
                pos_arg
                  integer_literal	2
  
  '''
# ---
# name: test_subscript_expr_ok[subscript_expr_path_expr_nested][sql]
  'SELECT column1.column2[0][1]'
# ---
# name: test_subscript_expr_ok[subscript_expr_path_expr_nested][tree]
  '''
  query_expr
    select
      select_list
        select_expr
          subscript_expr
            subscript_expr
              path_expression
                ident	column1
                ident	column2
              integer_literal	0
            integer_literal	1
  
  '''
# ---
# name: test_subscript_expr_ok[subscript_expr_string_literal][sql]
  "SELECT column1['key1']"
# ---
# name: test_subscript_expr_ok[subscript_expr_string_literal][tree]
  '''
  query_expr
    select
      select_list
        select_expr
          subscript_expr
            ident	column1
            string_literal	'key1'
  
  '''
# ---
