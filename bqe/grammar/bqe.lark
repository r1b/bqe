%import common (WS)
%import .bigquery (ALL, _AS, _COMMA, DISTINCT, _EQ, _FROM, _LPAR, _RPAR, _SELECT, as_alias, column_expr, from_clause, from_item, ident, integer_literal, parameter, query_expr, query_statement, select, select_list, subquery, start)

# TODO: See ZetaSQL for a more complete definition of WS
%ignore WS

################################################################################
# Punctuation
################################################################################

_PIPE_OP : "|>"
_SEMI : ";"

################################################################################
# Keywords
################################################################################

# All keywords are case-insensitive

_AGGREGATE : "AGGREGATE"i
ASC : "ASC"i
_BY : "BY"i
_CORRESPONDING : "CORRESPONDING"i
CROSS : "CROSS"i
_CUBE : "CUBE"i
DESC : "DESC"i
_DROP : "DROP"i
EXCEPT : "EXCEPT"i
_EXTEND : "EXTEND"i
FIRST : "FIRST"i
FULL : "FULL"i
_GROUP : "GROUP"i
_GROUPING : "GROUPING"i
INNER : "INNER"i
INTERSECT : "INTERSECT"i
_JOIN : "JOIN"i
LAST : "LAST"i
LEFT : "LEFT"i
_LIMIT : "LIMIT"i
_NAME : "NAME"i
_NULLS : "NULLS"i
_ON : "ON"i
_ORDER : "ORDER"i
OUTER : "OUTER"i
_RENAME : "RENAME"i
RIGHT : "RIGHT"i
_ROLLUP : "ROLLUP"i
_SET : "SET"i
_SETS : "SETS"i
_STRICT : "STRICT"i
UNION : "UNION"i
_USING : "USING"i
_WHERE : "WHERE"i

################################################################################
# Procedural
################################################################################

%extend query_statement : script

script : query_statement script_item

script_item : _SEMI query_statement?

################################################################################
# Pipe
################################################################################

%extend query_expr : pipe_from

pipe_from : _FROM from_clause

%extend query_expr : pipe_expr

pipe_expr : pipe_start pipe_item+

pipe_start : select | subquery | pipe_from

pipe_item : _PIPE_OP pipe_operator

pipe_operator : pipe_select
    | pipe_extend
    | pipe_set
    | pipe_drop
    | pipe_rename
    | pipe_as
    | pipe_where
    | pipe_limit
    | pipe_agg
    | pipe_order_by
    | pipe_set_operation
    | pipe_join
#   | pipe_call
#   | pipe_window
#   | pipe_tablesample
#   | pipe_pivot
#   | pipe_unpivot

# SELECT

pipe_select : _SELECT select_list

# EXTEND

pipe_extend : _EXTEND extend_list

extend_list : extend_item ( _COMMA extend_item )* _COMMA?

extend_item : column_expr as_alias?

# SET

pipe_set : _SET set_list

set_list : set_item ( _COMMA set_item )* _COMMA?

set_item : ident _EQ column_expr

# DROP

pipe_drop : _DROP drop_list

drop_list : drop_item ( _COMMA drop_item )* _COMMA?

drop_item : ident

# RENAME

pipe_rename : _RENAME rename_list

rename_list : rename_item ( _COMMA rename_item )* _COMMA?

rename_item : ident as_alias

# AS

pipe_as : _AS ident

# WHERE

pipe_where : _WHERE column_expr

# LIMIT

# TODO: Add offset
pipe_limit : _LIMIT ( integer_literal | parameter )

# AGGREGATE

pipe_agg : _AGGREGATE agg_list group_by?

agg_list : agg_item ( _COMMA agg_item )* _COMMA?

agg_item : column_expr as_alias?

# GROUP BY
# Per zetasql, GROUP BY ALL is not supported in pipe syntax
# No trailing commas allowed in GROUP BY forms
# TODO: Omitting ORDER BY for now because it is unnecessary

group_by : _GROUP _BY grouping_items

grouping_items :  grouping_item ( _COMMA grouping_item )*

# FIXME: Make a rule for as_alias_as_required
grouping_item : grouping_item_empty
    | column_expr ( _AS ident )?
    | rollup_list _RPAR
    | cube_list _RPAR
    | grouping_set_list _RPAR

grouping_item_empty : _LPAR _RPAR

rollup_list : _ROLLUP _LPAR column_expr | rollup_list _COMMA column_expr

cube_list : _CUBE _LPAR column_expr | cube_list _COMMA column_expr

grouping_set_list : _GROUPING _SETS _LPAR grouping_set | grouping_set_list _COMMA grouping_set

grouping_set : grouping_item_empty
    | column_expr
    | rollup_list _RPAR
    | cube_list _RPAR

# ORDER BY

pipe_order_by : _ORDER _BY order_by_items

order_by_items : order_by_item ( _COMMA order_by_item )*

order_by_item : column_expr order_by_item_sort? order_by_item_nulls?

order_by_item_sort : ASC | DESC

order_by_item_nulls : _NULLS ( FIRST | LAST )

# Set operations

pipe_set_operation : set_operation | set_operation_with_criteria

set_operation : set_operation_kind set_operation_mode set_operation_modifier? set_operation_list

set_operation_with_criteria : set_operation_criteria set_operation_kind set_operation_mode set_operation_modifier set_operation_list

set_operation_kind : UNION | INTERSECT | EXCEPT

set_operation_mode : ALL | DISTINCT

set_operation_list : subquery ( _COMMA subquery )*

?set_operation_modifier : set_operation_modifier_by_name
    | set_operation_modifier_corresponding
    | set_operation_modifier_strict_corresponding

set_operation_modifier_by_name : _BY _NAME ( _ON set_operation_columns )?

set_operation_modifier_corresponding : _CORRESPONDING ( _BY set_operation_columns )?

set_operation_modifier_strict_corresponding : _STRICT _CORRESPONDING ( _BY set_operation_columns )?

set_operation_columns : _LPAR ident ( _COMMA ident )* _RPAR

set_operation_criteria : INNER | ( FULL | LEFT ) OUTER?

pipe_join : join | join_with_criteria

join : _JOIN from_item ( on_clause | using_clause )

on_clause : _ON column_expr

using_clause : _USING using_columns

using_columns : _LPAR ident ( _COMMA ident )* _RPAR

join_with_criteria : join_criteria _JOIN from_item ( on_clause | using_clause )

join_criteria : CROSS | INNER | ( FULL | LEFT | RIGHT ) OUTER?
